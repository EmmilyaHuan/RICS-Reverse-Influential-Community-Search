import time
import networkx as nx
from Tools.inf_score_u_v import inf_u_Q


def collapse_calculate(G: nx.Graph, hop_G: nx.Graph, neighbor_nodes_set: list, type: str)-> list:
    # return boundary influence set
    # if hop_G.number_of_nodes() > Nmax:
    #     return [0]
    # else:
    inf_score_boundary = [0]*len(neighbor_nodes_set)
    i = 0

    if type == "target":
        for boundary_node in neighbor_nodes_set:
            # temp_sum_inf_i = 0
            temp_sum_inf_i = inf_u_Q(G, boundary_node, hop_G)
            # for hop_node in hop_G.nodes:
            #     inf_bn_hn, _ = max_weight_path(G, boundary_node, hop_node)
            #     temp_sum_inf_i = temp_sum_inf_i + inf_bn_hn
            inf_score_boundary[i] = temp_sum_inf_i
            i = i + 1
            # print("finished {} !".format(boundary_node))
    elif type == "seed":
        for boundary_node in neighbor_nodes_set:
            # start_time = time.time()
            # temp_sum_inf_i = 0
            # for hop_node in hop_G.nodes:
            #     inf_bn_hn, _ = max_weight_path(G, hop_node, boundary_node)
            #     temp_sum_inf_i = temp_sum_inf_i + inf_bn_hn
            temp_sum_inf_i = inf_u_Q(G, boundary_node, hop_G)
            inf_score_boundary[i] = temp_sum_inf_i
            i = i + 1
            # print("finished {}, inf_score({}, hop) = {} !".format(boundary_node, boundary_node, temp_sum_inf_i))
            # print("need time:{}".format(time.time() - start_time))
    return inf_score_boundary

# if __name__ == '__main__':
#     # G = nx.read_gml("C:/Users/Mastlab-wq/Desktop/RICS/Out/pre-compute/Facebook/4039-88234-20-2/G.gml")
#     G = nx.read_gml("../Out/pre-compute/Facebook/4039-88234-20-2/G.gml")
#     subG = nx.ego_graph(G=G, n="1", radius=1, center=True)
#     print(subG.number_of_nodes())
#     print(subG.number_of_nodes() < 100)
    # node_index = "1"
    # print(G.nodes[node_index]["dist"], G.nodes[node_index]["keywords"],
    #       G.edges[node_index, "0"]["weight"],
    #       G.nodes[node_index]["PD"])
    # for r in range(3):
    #     subG = nx.ego_graph(G=G, n=node_index, radius=r+1, center=True)
    #     r_hop_boundary_nodes = []
    #     for node in subG.nodes():
    #         neighbors = set(G.neighbors(node))
    #         # print(neighbors)
    #         for neighbor in neighbors:
    #             if neighbor not in subG.nodes():
    #                 if neighbor not in r_hop_boundary_nodes:
    #                     r_hop_boundary_nodes.append(neighbor)
    #     print(subG.number_of_nodes())
    #     print(r_hop_boundary_nodes)
    #     print(len(r_hop_boundary_nodes))
    # h = [[0.7845030307222064, 0.8161789093427134, 0.8345285534274731, 0.8943560574278967, 0.7849798980902412, 0.7974118743598608, 0.8605649974453442, 0.8032786814043756, 0.8363906485885931, 0.7858123649774336, 0.8431172881877012, 0.7622999101011316, 0.8302368835394172, 0.8082095051071945, 0.8702101804729815, 0.8467639797188726, 0.7882423498075883, 0.9007687791078761, 0.8246947056059055, 0.8863015068355882, 0.8571395266050736, 0.885690988860663, 0.7847046714025795, 0.7576007609577713, 0.8854374025418015, 0.8332922532840878, 0.800132987411668, 0.7904431386491956, 0.8066052346892261, 0.8967456148431339, 0.7691814437758775, 0.7970964268805343, 0.8905792377228057, 0.8703200404774152, 0.7664924642968654, 0.8240474864523839, 0.7613959652615174, 0.776127868499229, 0.8467540347670953, 0.8665467912263816, 0.8485958421308243, 0.7807313098057054, 0.8157754044972618, 0.8175858170479668, 0.8751163194647262, 0.7783264611450069, 0.8563589114148795, 0.7625064630034577, 0.8670292041072152, 0.8510744271615256, 0.8177938222736452, 0.8114964591177449, 0.7905465075464384, 0.8076319902351696, 0.8812394374954191, 0.8999021584131912, 0.9068794108752771, 0.7790354550349041, 0.8829372771397042, 0.8266748637481924, 0.7597020039342555, 0.8782213666164402, 0.8076816042024948, 0.8244704128311842, 0.8568767960052586, 0.8212373432381572, 0.7994747360929284, 0.8525102452160254, 0.8327931098049246, 0.7781215843970273, 0.8400909251024306, 0.8624179319724719, 0.8687032290821839, 0.8016378197822089, 0.8732424970184545, 0.7957401514847748, 0.9016139873145461, 0.8258539896156951, 0.7610156720555659, 0.7878447459248852, 0.8049708599384134, 0.7921969647517079, 0.8225679741708884, 0.8122621041736102, 0.9002932838897886, 0.8685729402355695, 0.7971058250213876, 0.7714697604601837, 0.7673027146924911, 0.8130923210044518, 0.8347519145701898, 0.8090804740291491, 0.8473138995284879, 0.7954039014251144, 0.8026794411530527, 0.8516171489974209, 0.8516224427294357, 0.7897842352581104, 0.8649803971103673, 0.862375371600892, 0.900929945868797, 0.792287836396127, 0.8819390563554412, 0.8157479215072735, 0.7592413076060931, 0.7921270756949848, 0.8761728106897883, 0.8751099417229335, 0.8369344563779051, 0.7917336071218402, 0.904583303036175, 0.8711431187623927, 0.8394287316016209, 0.8570332185794269, 0.869274414336173, 0.8455799115660423, 0.7780370647666401, 0.7889806897383987, 0.8254820247402126, 0.7955954356143268, 0.7963615676210134, 0.7851644563864988, 0.7635900393445987, 0.7624904917497604, 0.8660271378287208, 0.7760272343846395, 0.7733413737610757, 0.860882477618852, 0.7608646193648171, 0.8229603759646855, 0.763425783076761, 0.8399722705692743, 0.862984549642229, 0.7925939976885324, 0.7877799577254061, 0.8505301673223133, 0.8499721242634524, 0.8072909725943205, 0.8935414448768382, 0.7918728051961186, 0.8888935497069632, 0.7934473135303641, 0.786779889638329, 0.7897771759374277, 0.8974133608466115, 0.8974377115167906, 0.7974494901924369, 0.8408794229196581, 0.8042148041054711, 0.8759800336270305, 0.8809545630538032, 0.767664119035646, 0.8606895076631224, 0.7714074539904793, 0.8196401608597736, 0.8077726567951138, 0.7764825825776402, 0.8543544024150325, 0.8225774993666299, 0.851863404806287, 0.8532706365934195, 0.8256755278267451, 0.8436850563536328, 0.8472068060175207, 0.7777820839338588, 0.8020945260975885, 0.7659628960516085, 0.8888940954581461, 0.8315452330649065, 0.7978267131875267, 0.8782466080067011, 0.8939913814840168, 0.7814256161496895, 0.7945551308075589, 0.7702873356020814, 0.9068779646492068, 0.8795096890238321, 0.797242013119748, 0.8297456254380637, 0.8609488181406764, 0.8200147748752691, 0.8118358694383484, 0.8572824475511607, 0.8991516682169771, 0.7958606005773974, 0.7768863619356134, 0.8371983269249852, 0.7841647591427818, 0.8872272577409712, 0.8544221818593638, 0.8331933216788985, 0.8040449643928126, 0.8642216692167712, 0.8639492326896632, 0.7583661843457367, 0.8598059652667354, 0.9078220257083873, 0.777319987238294, 0.9079716444896476, 0.7783186787926748, 0.8256295070497728, 0.8673836667215041, 0.8220943620765284, 0.8935345656373685, 0.8135630317449448, 0.7647884125500805, 0.7832330871769957, 0.8459934725286113, 0.7694849439452125, 0.831264613007616, 0.79341934036286, 0.8488983844089742, 0.8556407468632934, 0.9044052952614348, 0.7799873844687987, 0.7575068890215118, 0.8242168059381239, 0.8981659746543251, 0.7840030832767182, 0.8605406919337122, 0.8337215667358747, 0.7679612913023952, 0.7980916909000206, 0.789656918707567, 0.8881299494772006, 0.8745925702443478, 0.8517859123748628, 0.882620481652054, 0.8795549845618916, 0.8527309920854323, 0.8368371703025367, 0.8565608471279131, 0.8338815130375055, 0.7646150065727784, 0.8254463067366208, 0.8602173656882153, 0.8383057510900016, 0.8022015455733564, 0.8800549753569427, 0.7618045492713758, 0.7933366615042381, 0.8467411197736445, 0.8569977826815546, 0.8808915273191226, 0.8376677862200336, 0.8405597810188499, 0.8003283681006099, 0.8990999580355558, 0.8125440435677089, 0.9039005123253065, 0.8061053523114514, 0.7971747185595297, 0.7633361984516324, 0.8914567307368866, 0.8747321604356371, 0.7873430584812091, 0.9019170459382884, 0.8902658245933794, 0.7953869077437443, 0.8673210958165745, 0.9073666651183812, 0.8853097754520904, 0.8301222233636746, 0.86682793340217, 0.9068692637691771, 0.8389463552014278, 0.7586591339032236, 0.8871549534146175, 0.7742960035521238, 0.8964196373557451, 0.8997506130137022, 0.8726195936513618, 0.819703504277278, 0.771335181244744, 0.8221861775813599, 0.7652376237439227, 0.8353528926030389, 0.8666849183268456, 0.8910733363190771, 0.838975536251217, 0.8917045511236651, 0.8433669611128016, 0.8944192937001276, 0.7952156417916547, 0.8882360522718473, 0.8576386496639439, 0.7712993228318455, 0.7638310927082019, 0.8157307607540483, 0.857719622464689, 0.8154631196741963, 0.8425134527079574, 0.8158357413915028, 0.8624011983729928, 0.8628243853663382, 0.842323830475122, 0.7931000621548518, 0.8893821017655918, 0.8819761247179594, 0.8977405731620023, 0.8788518606888533, 0.896751597015258, 0.7885647471635633, 0.8969944723520371, 0.7878830973607913, 0.8685591999893711, 0.8834044468336175, 0.8845976669029998, 0.8573186738043441, 0.8419304403037039, 0.8607382202133156, 0.762083907502811, 0.8850595288151992, 0.8466459266855353, 0.8868360967833102, 0.8665963578586386, 0.8989546055874036, 0.9009134202572131, 0.892956525850179, 0.7774492774985877, 0.8925271106431105, 0.809099676875288, 0.7915056305248844, 0.8762356804624267, 0.8543224137450869, 0.7769909871807927, 0.8047977111900189, 0.8305193916143114, 0.8938130244639384, 0.8582377938889444, 0.8234608493604649, 0.7855120125226059, 0.8805941421388214, 0.8574976986018314, 0.8714031108452207, 0.8210289632957355, 0.7841244406443559, 0.8703960484531197, 0.8943626619129578, 0.8192337341228997, 0.8775562040261597, 0.8013587070405646, 0.7679670085991273, 0.8301401822247333, 0.8813887590135909, 0.7661568858322003], [0], [0]]
    # print(len(h[0]))
    # neighbor_nodes_set = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
    #                       36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
    #                       71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
    #                       105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132,
    #                       134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
    #                       160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
    #                       186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
    #                       213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239,
    #                       240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
    #                       266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292,
    #                       293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320,
    #                       321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347]
    # neighbor_nodes_set = [428, 348, 414, 2885, 3173, 1684, 2838, 1912, 3290, 3003, 2814, 353, 363, 366, 376, 389, 420, 475, 483, 484, 517, 526, 538, 563,
    #                       566, 580, 596, 601, 606, 629, 637, 641, 649, 651, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
    #                       911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
    #                       936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
    #                       962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
    #                       988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
    #                       1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
    #                       1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
    #                       1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
    #                       1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
    #                       1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
    #                       1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
    #                       1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
    #                       1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
    #                       1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
    #                       1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
    #                       1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
    #                       1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
    #                       1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
    #                       1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
    #                       1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
    #                       1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
    #                       1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
    #                       1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
    #                       1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
    #                       1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
    #                       1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
    #                       1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
    #                       1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
    #                       1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
    #                       1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
    #                       1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
    #                       1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
    #                       1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
    #                       1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
    #                       1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
    #                       1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
    #                       1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
    #                       1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
    #                       1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
    #                       1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
    #                       1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
    #                       1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
    #                       1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
    #                       1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
    #                       1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
    #                       1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 2054, 2571, 2068,
    #                       2071, 2072, 2583, 2589, 2081, 2598, 2102, 2617, 2111, 2116, 2117, 2629, 2635, 2636, 2127, 2128, 2640, 2643, 2133, 2135, 2647, 2138,
    #                       2649, 2653, 2143, 2660, 2153, 2157, 2171, 2174, 2180, 2183, 2187, 2189, 2199, 2203, 2223, 2224, 2225, 2247, 2250, 2254, 2264, 2267,
    #                       2268, 2279, 2283, 2284, 2289, 2292, 2302, 2319, 2327, 2336, 2337, 2364, 2378, 2384, 2398, 2417, 2436, 1926, 1932, 2445, 2447, 1939,
    #                       2451, 1945, 2458, 2459, 2461, 1951, 2463, 1955, 2471, 2472, 2475, 1972, 1973, 1976, 2491, 2494, 2498, 2502, 1991, 1995, 2508, 1998,
    #                       2510, 2511, 2001, 2004, 2007, 2009, 2529, 2018, 2533, 2024, 2538, 2027, 2543, 2032, 2547, 2038, 2039, 2042, 2704, 2740, 549, 427,
    #                       464, 393, 364, 399, 564, 501, 441, 476, 351]

    # for i in range(len(neighbor_nodes_set)):
    #
    #     neighbor_nodes_set[i] = str(neighbor_nodes_set[i])
    #
    # strart_time = time.time()
    # vi_B = collapse_calculate(G, subG, neighbor_nodes_set,"seed")
    # print(vi_B)
    # print("all time: {}".format(time.time()-strart_time))